{% extends "base.html.twig" %}

{% block body %}
{# 
 En language Twig, le . sert à accéder à l'indice d'un  tableau ASSOCIATIF et aussi à acceder aux propriétés d'un objet (meme aux propriétés privées)
 #}
  <p> Le prenom est {{ tab.prenom }}</p>
  <p> Le nom est {{ tab.nom }}</p>
  <p> Il a {{ tab.age }} ans</p>
  <p> Il habite a {{ tab.ville }}</p>

 {#
 Synthaxe de la condition if else if else:
  {% if condition %}
 {% elseif condition %}
 {% else %}
 {% endif %}

 En Twig, on peut tester les variables avec des TESTS. La syntaxe est la suivant:
 variable is test, defined, null, empty,....
  #}

{% if tab2 is defined %}

    {# {{ tab2[0] }} #}
    {# Il n'y a qu'une seul type de boucle (= structure itérative) qui existe dans Twig : for 
    Elle remplace for, while, foreach, do while
    FOREACH synthaxe : for valeur in tableau => foreach($tableau as $valeur)
                    : for indice, valeur in tableau => foreach($tableau as $indice => $valeur)
    FOR              : for i in 0..10        => for($i=0; $i<=10; $i++)
    
    #}


  <h3> FOREACH </h3>
  {# Boucle foreach #}
  {% for val in tab2 %} 

  {{ val ~ " - "}}

  {% endfor %}


  <h3> FOR </h3>
  {# Boucle for #}
  <table>
  {% for i in 0..4 %}
    
  <tr>
    <td> {{ i }} </td>
    <td> {{ tab2[i] }} </td>

  {% endfor %}
  </table>

  <h3> FOREACH (avec indices) </h3>

  <table>
  {% for indice, val in tab2 %}
    <tr>
      <td> {{ indice }} </td>
      <td> {{ val }} </td>
    </tr>  
  {% endfor %}
  </table>


{% endif %}
 {% endblock %}